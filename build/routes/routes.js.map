{"version":3,"sources":["../../server/routes/routes.js"],"names":["path","require","fs","routes","app","get","req","res","Test","find","lean","data","console","log","render","tests","verify","Private","post","body","create","value","st","redirect","files","file","name","rename","tempFilePath","join","link","username","password","sendFile","__dirname"],"mappings":"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","sourcesContent":["import {Test, Private} from \"../models/models\";\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nimport {verify, signin, createuser} from \"../helpers/auth\";\n\nexport const routes = (app) => {\n    app.get(\"/\", async (req,res) => {\n        const data = await Test.find().lean();\n        console.log(\"recieved request!\");\n        res.render(\"pages/index\", {\n            tests: data,\n        });\n    });\n    app.get(\"/private\", verify, async (req,res) => {\n        const data = await Private.find().lean();\n        console.log(\"recieved request!\");\n        res.render(\"pages/private\", {\n            tests: data,\n        });\n    });\n    app.post(\"/testup\", verify, async (req,res) => {\n        console.log(req.body);\n        await Test.create({value:req.body.st});\n        res.redirect(\"/\");\n    });\n    app.post(\"/fileup\", verify, async (req, res) => {\n        console.log(req.files.file.name);\n        fs.rename(req.files.file.tempFilePath,path.join(\"tmp\",req.files.file.name), ()=>{});\n        await Test.create({value:req.files.file.name,link:path.join(\"files\",req.files.file.name)});\n        res.redirect(\"/\");\n    })\n    app.post(\"/privatetestup\", verify, async (req,res) => {\n        console.log(req.body);\n        await Private.create({value:req.body.st});\n        res.redirect(\"/private\");\n    });\n    app.post(\"/privatefileup\", verify, async (req, res) => {\n        console.log(req.files.file.name);\n        fs.rename(req.files.file.tempFilePath,path.join(\"privatetmp\",req.files.file.name), ()=>{});\n        await Private.create({value:req.files.file.name,link:path.join(\"privatefiles\",req.files.file.name)});\n        res.redirect(\"/private\");\n    })\n    app.get(\"/loginpage\", async (req, res) => {\n        res.render(\"pages/login\");\n    })\n    app.post(\"/login\", async (req, res) => {\n        await signin(req, res);\n    })\n    app.post(\"/createuser\", async (req, res) => {\n        createuser(req.body.username, req.body.password);\n        res.redirect(\"/\");\n    })\n    app.get(\"/basic\", (req, res) => {\n        res.sendFile(path.join(__dirname,\"../../index.html\"));\n    })\n}\n\nexport default routes;"],"file":"routes.js"}